{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { styles } from \"../assets/styles/Styles\";\nimport { Controller, useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UserScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fullname = _useState2[0],\n    setFullname = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useForm = useForm({\n      defaultValues: {\n        user: '',\n        rol: '',\n        password: ''\n      }\n    }),\n    control = _useForm.control,\n    hundleSubmit = _useForm.hundleSubmit,\n    error = _useForm.formState.error;\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^[A-Za-zÑñáéíóú]+$/i\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: [styles.inputs],\n          placeholder: \"User\",\n          onChangeText: function onChangeText(value) {\n            return setFullname(value);\n          },\n          onBlur: onBlur,\n          value: value,\n          onChange: onChange\n        });\n      }\n    }), _jsx(TextInput, {\n      style: styles.inputs,\n      onChangeText: function onChangeText(value) {\n        return setFullname(value);\n      },\n      value: fullname\n    }), _jsx(TextInput, {\n      style: styles.inputs,\n      onChangeText: function onChangeText(value) {\n        return setEmail(value);\n      },\n      value: email\n    }), _jsx(Button, {\n      title: \"Perfil del Usuario\"\n      ,\n      onPress: function onPress() {\n        if (email == \"tv@gmail.com\") {\n          setEmail(\"\");\n          setFullname(\"\");\n          navigation.navigate('Profile', {\n            fullname: fullname\n          });\n        }\n      }\n    })]\n  });\n}\nexport default UserScreen;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","useState","styles","Controller","useForm","UserScreen","navigation","fullname","setFullname","email","setEmail","defaultValues","user","rol","password","control","hundleSubmit","error","formState","onSubmit","data","console","log","flex","alignItems","justifyContent","required","pattern","field","onChange","onBlur","value","inputs","navigate"],"sources":["C:/Users/matii/OneDrive/DEV/CESDE/4_semestre/MovilesIII/projReactNative/tabform/screens/UserScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, Button, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useState } from 'react';\r\nimport { styles } from '../assets/styles/Styles';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nfunction UserScreen({ navigation }) {  \r\n    const [fullname, setFullname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const {control, hundleSubmit, formState: { error } } = useForm({\r\n      defaultValues: {\r\n        user: '',\r\n        rol: '',\r\n        password: '',\r\n      }\r\n    });  \r\n    // const validate = () => {\r\n    //   if (email == \"tv@gmail.com\") {\r\n    //     setEmail(\"\");\r\n    //     setFullname(\"\")\r\n    //     navigation.navigate('Profile', { fullname: fullname })\r\n    //   }\r\n    // }\r\n    const onSubmit = data => console.log(data);\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Controller \r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n          pattern: /^[A-Za-zÑñáéíóú]+$/i,        \r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={[styles.inputs]}\r\n            placeholder=\"User\"\r\n            onChangeText={value => setFullname(value)}\r\n            onBlur={onBlur}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n        />\r\n        <TextInput\r\n          style={styles.inputs}\r\n          onChangeText={value => setFullname(value)}\r\n          value={fullname}\r\n        />\r\n        <TextInput\r\n          style={styles.inputs}\r\n          onChangeText={value => setEmail(value)}\r\n          value={email}\r\n        />\r\n        <Button\r\n          title=\"Perfil del Usuario\"\r\n          //onPress={() => navigation.navigate('Settings')}\r\n          //onPress={validate}\r\n          onPress={() => {\r\n            if (email == \"tv@gmail.com\") {\r\n              setEmail(\"\");\r\n              setFullname(\"\")\r\n              navigation.navigate('Profile', { fullname: fullname })\r\n            }\r\n          }}\r\n  \r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  export default UserScreen;"],"mappings":";;;;;;;AACA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM;AACf,SAASC,UAAU,EAAEC,OAAO,QAAQ,iBAAiB;AAAC;AAAA;AAEtD,SAASC,UAAU,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC5B,gBAAgCL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCM,QAAQ;IAAEC,WAAW;EAC5B,iBAA0BP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BQ,KAAK;IAAEC,QAAQ;EACtB,eAAuDN,OAAO,CAAC;MAC7DO,aAAa,EAAE;QACbC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IANKC,OAAO,YAAPA,OAAO;IAAEC,YAAY,YAAZA,YAAY;IAAeC,KAAK,YAAlBC,SAAS,CAAID,KAAK;EAchD,IAAME,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,IAAI;IAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAA;EAC1C,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEG,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,WACvE,KAAC,UAAU;MACX,OAAO,EAAEV,OAAQ;MACjB,KAAK,EAAE;QACLW,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE;MACX,CAAE;MACF,MAAM,EAAE;QAAA,wBAAGC,KAAK;UAAIC,QAAQ,eAARA,QAAQ;UAAEC,MAAM,eAANA,MAAM;UAAEC,KAAK,eAALA,KAAK;QAAA,OACzC,KAAC,SAAS;UACR,KAAK,EAAE,CAAC7B,MAAM,CAAC8B,MAAM,CAAE;UACvB,WAAW,EAAC,MAAM;UAClB,YAAY,EAAE,sBAAAD,KAAK;YAAA,OAAIvB,WAAW,CAACuB,KAAK,CAAC;UAAA,CAAC;UAC1C,MAAM,EAAED,MAAO;UACf,KAAK,EAAEC,KAAM;UACb,QAAQ,EAAEF;QAAS,EACnB;MAAA;IACF,EACA,EACF,KAAC,SAAS;MACR,KAAK,EAAE3B,MAAM,CAAC8B,MAAO;MACrB,YAAY,EAAE,sBAAAD,KAAK;QAAA,OAAIvB,WAAW,CAACuB,KAAK,CAAC;MAAA,CAAC;MAC1C,KAAK,EAAExB;IAAS,EAChB,EACF,KAAC,SAAS;MACR,KAAK,EAAEL,MAAM,CAAC8B,MAAO;MACrB,YAAY,EAAE,sBAAAD,KAAK;QAAA,OAAIrB,QAAQ,CAACqB,KAAK,CAAC;MAAA,CAAC;MACvC,KAAK,EAAEtB;IAAM,EACb,EACF,KAAC,MAAM;MACL,KAAK,EAAC;MAAoB;MAG1B,OAAO,EAAE,mBAAM;QACb,IAAIA,KAAK,IAAI,cAAc,EAAE;UAC3BC,QAAQ,CAAC,EAAE,CAAC;UACZF,WAAW,CAAC,EAAE,CAAC;UACfF,UAAU,CAAC2B,QAAQ,CAAC,SAAS,EAAE;YAAE1B,QAAQ,EAAEA;UAAS,CAAC,CAAC;QACxD;MACF;IAAE,EAEF;EAAA,EACG;AAEX;AAEA,eAAeF,UAAU"},"metadata":{},"sourceType":"module"}