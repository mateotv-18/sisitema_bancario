{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { styles } from \"../assets/styles/Styles\";\nimport { Controller, useForm } from 'react-hook-form';\nimport Banner from \"../components/Banner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar users = [{\n  user: 'matiiutv',\n  rol: 'admin',\n  password: 'Elpapasito.123',\n  numCuenta: 51196882956\n}, {\n  user: 'mery',\n  rol: 'admin',\n  password: 'Elpapasito.123'\n}];\nfunction UserScreen(_ref) {\n  var _errors$user, _errors$user2, _errors$rol, _errors$password, _errors$password2;\n  var navigation = _ref.navigation;\n  var _useForm = useForm({\n      defaultValues: {\n        user: '',\n        rol: '',\n        password: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    var userSearch = users.find(function (user) {\n      return user.user === data.user && user.rol === data.rol && user.password === data.password;\n    });\n    if (userSearch === undefined) {\n      return alert('Usuario contraseña o rol no valido, por favor verificar la información');\n    }\n    navigation.navigate('Cuenta', {\n      user: data.user\n    });\n    navigation.navigate('Cuenta', {\n      user: data.user\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Banner, {\n      img: \"bank.png\"\n    }), _jsx(Text, {\n      style: [styles.texts],\n      children: \"Usuario:\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^[A-Za-zÑñáéíóú]+$/i\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: [styles.inputs],\n          placeholder: \"Ingrese su usuario\"\n          ,\n          onBlur: onBlur,\n          value: value,\n          onChange: onChange\n        });\n      },\n      name: \"user\"\n    }), ((_errors$user = errors.user) == null ? void 0 : _errors$user.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El nombre es obligatorio\"\n    }), ((_errors$user2 = errors.user) == null ? void 0 : _errors$user2.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El usuario solo debe tener letras y/o espacios\"\n    }), _jsx(Text, {\n      style: styles.texts,\n      children: \" Rol: \"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: [styles.inputs],\n          placeholder: \"Administrador / Usuario\"\n          ,\n          onBlur: onBlur,\n          value: value,\n          onChange: onChange\n        });\n      },\n      name: \"rol\"\n    }), ((_errors$rol = errors.rol) == null ? void 0 : _errors$rol.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El Rol es obligatorio\"\n    }), _jsx(Text, {\n      style: styles.texts,\n      children: \" Contrase\\xF1a: \"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&+.])[A-Za-z\\d$@$!%*?&]{8,15}/\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          style: styles.inputs,\n          onBlur: onBlur,\n          placeholder: \"Elija su contrase\\xF1a\",\n          secureTextEntry: true\n          ,\n          onChange: onChange,\n          value: value\n        });\n      },\n      name: \"password\"\n    }), ((_errors$password = errors.password) == null ? void 0 : _errors$password.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La contrase\\xF1a es obigatorio\"\n    }), ((_errors$password2 = errors.password) == null ? void 0 : _errors$password2.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La contrase\\xF1a debe tener entro 8 y 15 caracteres, contener letras mayusculas, numeros y por lo menos un caracter especial\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttons,\n      onPress: handleSubmit(onSubmit),\n      children: _jsx(Text, {\n        style: styles.textbuttons,\n        children: \"Ingresar\"\n      })\n    })]\n  });\n}\nexport default UserScreen;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","useState","styles","Controller","useForm","Banner","users","user","rol","password","numCuenta","UserScreen","navigation","defaultValues","control","handleSubmit","errors","formState","onSubmit","data","userSearch","find","undefined","alert","navigate","flex","alignItems","justifyContent","texts","required","pattern","field","onChange","onBlur","value","inputs","type","color","buttons","textbuttons"],"sources":["C:/Users/matii/Desktop/Projects/sisitema_bancario/screens/UserScreen.jsx"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, Button, View, TextInput, TouchableOpacity, Picker } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useState } from 'react';\r\nimport { styles } from '../assets/styles/Styles';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport Banner from '../components/Banner';\r\n\r\nlet users = [\r\n  { user: 'matiiutv', rol: 'admin', password: 'Elpapasito.123', numCuenta: 51196882956 },\r\n  { user: 'mery', rol: 'admin', password: 'Elpapasito.123' }\r\n];\r\n\r\nfunction UserScreen({ navigation }) {\r\n  const { control, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: {\r\n      user: '',\r\n      rol: '',\r\n      password: '',\r\n    }\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    let userSearch = users.find(user => user.user === data.user && user.rol === data.rol && user.password === data.password);   \r\n\r\n    if (userSearch === undefined) {\r\n      return alert('Usuario contraseña o rol no valido, por favor verificar la información');        \r\n    }\r\n  \r\n    navigation.navigate('Cuenta', { user: data.user });\r\n    navigation.navigate('Cuenta', { user: data.user });\r\n  \r\n  };\r\n  \r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Banner img=\"bank.png\" />\r\n      <Text style={[styles.texts]}>Usuario:</Text>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n          pattern: /^[A-Za-zÑñáéíóú]+$/i,         \r\n        }}\r\n\r\n        render={({ field: { onChange, onBlur, value,} }) => (\r\n          <TextInput\r\n            style={[styles.inputs]}\r\n            placeholder=\"Ingrese su usuario\"\r\n            // onChangeText={value => setFullUser(value)}\r\n            onBlur={onBlur}\r\n            value={value}\r\n            onChange={onChange}           \r\n          />\r\n        )}\r\n        name='user'\r\n      />\r\n      {errors.user?.type == \"required\" && <Text style={{ color: 'red' }}>El nombre es obligatorio</Text>}\r\n      {errors.user?.type == \"pattern\" && <Text style={{ color: 'red' }}>El usuario solo debe tener letras y/o espacios</Text>}\r\n\r\n      <Text style={styles.texts}> Rol: </Text>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,         \r\n        }}\r\n        render={({ field: { onChange, onBlur, value,} }) => (\r\n          <TextInput\r\n            style={[styles.inputs]}\r\n            placeholder=\"Administrador / Usuario\"\r\n            // onChangeText={value => SetRol(value)}\r\n            onBlur={onBlur}\r\n            value={value}\r\n            onChange={onChange}\r\n           \r\n          />\r\n        )}\r\n        name='rol'\r\n      />\r\n      {errors.rol?.type == \"required\" && <Text style={{ color: 'red' }}>El Rol es obligatorio</Text>}  \r\n\r\n      <Text style={styles.texts}> Contraseña: </Text>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n          pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&+.])[A-Za-z\\d$@$!%*?&]{8,15}/,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.inputs}\r\n            onBlur={onBlur}\r\n            placeholder='Elija su contraseña'\r\n            secureTextEntry={true}\r\n            // onChangeText={value => setPassword(value)}\r\n            onChange={onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name='password'\r\n      />\r\n      {errors.password?.type == \"required\" && <Text style={{ color: 'red' }}>La contraseña es obigatorio</Text>}\r\n      {errors.password?.type == \"pattern\" && <Text style={{ color: 'red' }}>La contraseña debe tener entro 8 y 15 caracteres, contener letras mayusculas, numeros y por lo menos un caracter especial</Text>}\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttons}\r\n        onPress={(handleSubmit(onSubmit))}\r\n      >\r\n        <Text style={styles.textbuttons}>Ingresar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default UserScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}