{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { styles } from \"../assets/styles/Styles\";\nimport Banner from \"../components/Banner\";\nimport { Controller, useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ProfileScreen(_ref) {\n  var _errors$id, _errors$id2, _errors$id3;\n  var route = _ref.route;\n  var _useForm = useForm({\n      defaultValues: {\n        id: '',\n        fecha: '',\n        saldo: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Banner, {\n      img: \"bank.png\"\n    }), _jsxs(Text, {\n      style: styles.texts,\n      children: [\"Bienvenida: \", route.params.user]\n    }), _jsx(Text, {\n      style: styles.texts,\n      children: \"N\\xBA Cuenta:\"\n    }), _jsxs(TextInput, {\n      style: styles.TextInput,\n      children: [\" \", Math.floor(Math.random() * (999999999 - 100000000 + 1) + 100000000), \" \"]\n    }), _jsx(Text, {\n      style: styles.texts,\n      children: \" Idetificaci\\xF3n: \"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        minLength: 8,\n        maxLength: 10\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: [styles.inputs],\n          placeholder: \"Administrador / Usuario\",\n          onBlur: onBlur,\n          value: value,\n          onChange: onChange\n        });\n      },\n      name: \"id\"\n    }), ((_errors$id = errors.id) == null ? void 0 : _errors$id.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El Rol es obligatorio\"\n    }), ((_errors$id2 = errors.id) == null ? void 0 : _errors$id2.type) == \"minLengthin\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"la identificaci\\xF3n debe tener de 1 a \"\n    }), ((_errors$id3 = errors.id) == null ? void 0 : _errors$id3.type) == \"maxLength\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El Rol es obligatorio\"\n    })]\n  });\n}\nexport default ProfileScreen;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","useState","styles","Banner","Controller","useForm","ProfileScreen","route","defaultValues","id","fecha","saldo","control","handleSubmit","errors","formState","container","texts","params","user","TextInput","Math","floor","random","required","minLength","maxLength","field","onChange","onBlur","value","inputs","type","color"],"sources":["C:/Users/matii/Desktop/Projects/sisitema_bancario/screens/ProfileScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, Button, View, TextInput } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useState } from 'react';\r\nimport { styles } from '../assets/styles/Styles';\r\nimport Banner from '../components/Banner';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\n\r\n\r\nfunction ProfileScreen({ route }) {\r\n\r\n  const { control, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: {\r\n      id: '',\r\n      fecha: '',\r\n      saldo: '',\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Banner img=\"bank.png\" />\r\n      <Text style={styles.texts}>Bienvenida: {route.params.user}</Text>\r\n      <Text style={styles.texts}>Nº Cuenta:</Text>\r\n      <TextInput style={styles.TextInput}> {Math.floor(Math.random() * (999999999 - 100000000 + 1) + 100000000)} </TextInput>\r\n\r\n      <Text style={styles.texts}> Idetificación: </Text>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,                \r\n          minLength: 8,\r\n          maxLength: 10,\r\n          \r\n        }}\r\n        render={({ field: { onChange, onBlur, value, } }) => (\r\n          <TextInput\r\n            style={[styles.inputs]}\r\n            placeholder=\"Administrador / Usuario\"            \r\n            onBlur={onBlur}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n        name='id'        \r\n      />\r\n      {errors.id?.type == \"required\" && <Text style={{ color: 'red' }}>El Rol es obligatorio</Text>}\r\n      {errors.id?.type == \"minLengthin\" && <Text style={{ color: 'red' }}>la identificación debe tener de 1 a </Text>}\r\n      {errors.id?.type == \"maxLength\" && <Text style={{ color: 'red' }}>El Rol es obligatorio</Text>}\r\n\r\n\r\n\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;"],"mappings":";;;;;AACA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM;AACf,OAAOC,MAAM;AACb,SAASC,UAAU,EAAEC,OAAO,QAAQ,iBAAiB;AAAC;AAAA;AAItD,SAASC,aAAa,OAAY;EAAA;EAAA,IAATC,KAAK,QAALA,KAAK;EAE5B,eAAyDF,OAAO,CAAC;MAC/DG,aAAa,EAAE;QACbC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IANMC,OAAO,YAAPA,OAAO;IAAEC,YAAY,YAAZA,YAAY;IAAeC,MAAM,YAAnBC,SAAS,CAAID,MAAM;EASlD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEZ,MAAM,CAACc,SAAU;IAAA,WAC5B,KAAC,MAAM;MAAC,GAAG,EAAC;IAAU,EAAG,EACzB,MAAC,IAAI;MAAC,KAAK,EAAEd,MAAM,CAACe,KAAM;MAAA,2BAAcV,KAAK,CAACW,MAAM,CAACC,IAAI;IAAA,EAAQ,EACjE,KAAC,IAAI;MAAC,KAAK,EAAEjB,MAAM,CAACe,KAAM;MAAA;IAAA,EAAkB,EAC5C,MAAC,SAAS;MAAC,KAAK,EAAEf,MAAM,CAACkB,SAAU;MAAA,gBAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;IAAA,EAAc,EAEvH,KAAC,IAAI;MAAC,KAAK,EAAErB,MAAM,CAACe,KAAM;MAAA;IAAA,EAAwB,EAClD,KAAC,UAAU;MACT,OAAO,EAAEL,OAAQ;MACjB,KAAK,EAAE;QACLY,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,CAAC;QACZC,SAAS,EAAE;MAEb,CAAE;MACF,MAAM,EAAE;QAAA,wBAAGC,KAAK;UAAIC,QAAQ,eAARA,QAAQ;UAAEC,MAAM,eAANA,MAAM;UAAEC,KAAK,eAALA,KAAK;QAAA,OACzC,KAAC,SAAS;UACR,KAAK,EAAE,CAAC5B,MAAM,CAAC6B,MAAM,CAAE;UACvB,WAAW,EAAC,yBAAyB;UACrC,MAAM,EAAEF,MAAO;UACf,KAAK,EAAEC,KAAM;UACb,QAAQ,EAAEF;QAAS,EACnB;MAAA,CACF;MACF,IAAI,EAAC;IAAI,EACT,EACD,eAAAd,MAAM,CAACL,EAAE,qBAAT,WAAWuB,IAAI,KAAI,UAAU,IAAI,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAA;IAAA,EAA6B,EAC5F,gBAAAnB,MAAM,CAACL,EAAE,qBAAT,YAAWuB,IAAI,KAAI,aAAa,IAAI,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAA;IAAA,EAA4C,EAC9G,gBAAAnB,MAAM,CAACL,EAAE,qBAAT,YAAWuB,IAAI,KAAI,WAAW,IAAI,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAA;IAAA,EAA6B;EAAA,EAKzF;AAEX;AAEA,eAAe3B,aAAa"},"metadata":{},"sourceType":"module"}