{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useState } from 'react';\nimport { styles } from \"../assets/styles/Styles\";\nimport { Controller, useForm } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UserScreen(_ref) {\n  var _errors$user, _errors$user2, _errors$rol, _errors$password, _errors$password2;\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setFullUser = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPaswword = _useState4[1];\n  var _useState5 = useState('admini'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedValue = _useState6[0],\n    setSelectedValue = _useState6[1];\n  var _useForm = useForm({\n      defaultValues: {\n        user: '',\n        rol: '',\n        password: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^[A-Za-zÑñáéíóú]+$/i\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: [styles.inputs],\n          placeholder: \"User\",\n          onChangeText: function onChangeText(value) {\n            return setFullUser(value);\n          },\n          onBlur: onBlur,\n          value: value,\n          onChange: onChange\n        });\n      },\n      name: \"user\"\n    }), ((_errors$user = errors.user) == null ? void 0 : _errors$user.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El nombre es obligatorio\"\n    }), ((_errors$user2 = errors.user) == null ? void 0 : _errors$user2.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El usuario solo debe tener letras y/o espacios\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n          onChange = _ref3$field.onChange,\n          onBlur = _ref3$field.onBlur,\n          value = _ref3$field.value;\n        return _jsxs(Picker, {\n          style: styles.inputs,\n          onChange: onChange,\n          onBlur: onBlur,\n          vale: value,\n          selectedValue: selectedValue,\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setSelectedValue(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Administrator\",\n            value: \"administrator\"\n          }), _jsx(Picker.Item, {\n            label: \"User\",\n            value: \"user\"\n          })]\n        });\n      },\n      name: \"rol\"\n    }), ((_errors$rol = errors.rol) == null ? void 0 : _errors$rol.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"El Rol es obligatorio\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^(?=.*[a-z])(*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&+.])[A-Za-z\\d$@$!%*?&]{8,15}/\n      },\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n          onChange = _ref4$field.onChange,\n          onBlur = _ref4$field.onBlur,\n          value = _ref4$field.value;\n        return _jsx(TextInput, {\n          style: styles.inputs,\n          onBlur: onBlur,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          onChangeText: function onChangeText(value) {\n            return setPaswword(value);\n          },\n          onChange: onChange,\n          value: value\n        });\n      },\n      name: \"password\"\n    }), ((_errors$password = errors.password) == null ? void 0 : _errors$password.type) == \"required\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La contrase\\xF1a es obigatorio\"\n    }), ((_errors$password2 = errors.password) == null ? void 0 : _errors$password2.type) == \"pattern\" && _jsx(Text, {\n      style: {\n        color: 'red'\n      },\n      children: \"La contrase\\xF1a debe tener entro 8 y 15 caracteres, contener letras mayusculas, numeros y por lo menos un caracter especial\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttons\n      ,\n      onPressOut: handleSubmit(onSubmit),\n      onPress: function onPress() {\n        if (user == \"matiiutv\") {\n          setFullUser(\"\");\n          setPaswword(\"\");\n          navigation.navigate('Profile', {\n            user: user\n          });\n        }\n      },\n      children: _jsx(Text, {\n        style: styles.textbuttons,\n        children: \"Ingresar\"\n      })\n    })]\n  });\n}\nexport default UserScreen;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","useState","styles","Controller","useForm","UserScreen","navigation","user","setFullUser","password","setPaswword","selectedValue","setSelectedValue","defaultValues","rol","control","handleSubmit","errors","formState","onSubmit","data","console","log","flex","alignItems","justifyContent","required","pattern","field","onChange","onBlur","value","inputs","type","color","itemValue","itemIndex","buttons","navigate","textbuttons"],"sources":["C:/Users/matii/OneDrive/DEV/CESDE/4_semestre/MovilesIII/projReactNative/tabform/screens/UserScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, Button, View, TextInput, TouchableOpacity, Picker } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useState } from 'react';\r\nimport { styles } from '../assets/styles/Styles';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nfunction UserScreen({ navigation }) {\r\n  const [user, setFullUser] = useState('');\r\n  const [password, setPaswword] = useState('');\r\n  const [selectedValue, setSelectedValue] = useState('admini');\r\n  const { control, handleSubmit, formState: { errors } } = useForm({\r\n    defaultValues: {\r\n      user: '',\r\n      rol: '',\r\n      password: '',\r\n    }\r\n  });\r\n  // const validate = () => {\r\n  //   if (email == \"tv@gmail.com\") {\r\n  //     setPaswword(\"\");\r\n  //     setFullUser(\"\")\r\n  //     navigation.navigate('Profile', { fullname: fullname })\r\n  //   }\r\n  // }\r\n  const onSubmit = data => console.log(data);\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n          pattern: /^[A-Za-zÑñáéíóú]+$/i,\r\n        }}\r\n\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={[styles.inputs]}\r\n            placeholder=\"User\"\r\n            onChangeText={value => setFullUser(value)}\r\n            onBlur={onBlur}\r\n            value={value}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n        name='user'\r\n      />\r\n      {errors.user?.type == \"required\" && <Text style={{ color: 'red' }}>El nombre es obligatorio</Text>}\r\n      {errors.user?.type == \"pattern\" && <Text style={{ color: 'red' }}>El usuario solo debe tener letras y/o espacios</Text>}\r\n\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Picker\r\n            style={styles.inputs}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            vale={value}\r\n            selectedValue={selectedValue}\r\n            onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\r\n          >\r\n            <Picker.Item label=\"Administrator\" value=\"administrator\" />\r\n            <Picker.Item label=\"User\" value=\"user\" />\r\n          </Picker>\r\n        )}\r\n        name='rol'\r\n      />\r\n      {errors.rol?.type == \"required\" && <Text style={{ color: 'red' }}>El Rol es obligatorio</Text>}\r\n\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n          pattern: /^(?=.*[a-z])(*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&+.])[A-Za-z\\d$@$!%*?&]{8,15}/,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.inputs}\r\n            onBlur={onBlur}\r\n            placeholder='Password'\r\n            secureTextEntry={true}\r\n            onChangeText={value => setPaswword(value)}\r\n            onChange={onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name='password'\r\n      />\r\n      {errors.password?.type == \"required\" && <Text style={{ color: 'red' }}>La contraseña es obigatorio</Text>}\r\n      {errors.password?.type == \"pattern\" && <Text style={{ color: 'red' }}>La contraseña debe tener entro 8 y 15 caracteres, contener letras mayusculas, numeros y por lo menos un caracter especial</Text>}\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttons}\r\n        //onPress={() => navigation.navigate('Settings')}\r\n        //onPress={validate}  \r\n        onPressOut={(handleSubmit(onSubmit))}      \r\n        onPress={() => {\r\n         \r\n          if (user == \"matiiutv\") {\r\n            setFullUser(\"\");           \r\n            setPaswword(\"\");            \r\n            navigation.navigate('Profile', { user: user })\r\n          }\r\n        }}\r\n        >\r\n          <Text style={styles.textbuttons}>Ingresar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default UserScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}